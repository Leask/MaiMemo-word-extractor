package com.maimemo.text.stemmer;


import com.maimemo.text.SubCharSequence;

import java.util.HashMap;
import java.util.Map;

/**
 * Irregular verb word table
 * Created by TJT on 9/3/16.
 */
@SuppressWarnings("SpellCheckingInspection")
public class IrregularWordTable {
    private static  Map<CharSequence, CharSequence> mapping = null;

    private static void buildMap() {
        Map<CharSequence, CharSequence> map = new HashMap<>(510);
        map.put(new SubCharSequence("unbuilt"), "unbuild");
        map.put(new SubCharSequence("bode"), "bide");
        map.put(new SubCharSequence("went"), "go");
        map.put(new SubCharSequence("leaped"), "leap");
        map.put(new SubCharSequence("underran"), "underrun");
        map.put(new SubCharSequence("knelt"), "kneel");
        map.put(new SubCharSequence("retold"), "retell");
        map.put(new SubCharSequence("smelt"), "smell");
        map.put(new SubCharSequence("forecasted"), "forecast");
        map.put(new SubCharSequence("clove"), "cleave");
        map.put(new SubCharSequence("overflown"), "overfly");
        map.put(new SubCharSequence("throve"), "thrive");
        map.put(new SubCharSequence("rent"), "rend");
        map.put(new SubCharSequence("fordid"), "fordo");
        map.put(new SubCharSequence("outdid"), "outdo");
        map.put(new SubCharSequence("sawed"), "saw");
        map.put(new SubCharSequence("unwove"), "unweave");
        map.put(new SubCharSequence("bade"), "bid");
        map.put(new SubCharSequence("woken"), "wake");
        map.put(new SubCharSequence("mislaid"), "mislay");
        map.put(new SubCharSequence("rang"), "ring");
        map.put(new SubCharSequence("abided"), "abide");
        map.put(new SubCharSequence("overblown"), "overblow");
        map.put(new SubCharSequence("shoed"), "shoe");
        map.put(new SubCharSequence("waylaid"), "waylay");
        map.put(new SubCharSequence("blest"), "bless");
        map.put(new SubCharSequence("trodden"), "tread");
        map.put(new SubCharSequence("lent"), "lend");
        map.put(new SubCharSequence("sunk"), "sink");
        map.put(new SubCharSequence("forbore"), "forbear");
        map.put(new SubCharSequence("hidden"), "hide");
        map.put(new SubCharSequence("outgone"), "outgo");
        map.put(new SubCharSequence("mistaken"), "mistake");
        map.put(new SubCharSequence("withdrawn"), "withdraw");
        map.put(new SubCharSequence("laid"), "lay");
        map.put(new SubCharSequence("overpaid"), "overpay");
        map.put(new SubCharSequence("saw"), "see");
        map.put(new SubCharSequence("overbought"), "overbuy");
        map.put(new SubCharSequence("girded"), "gird");
        map.put(new SubCharSequence("willed"), "will");
        map.put(new SubCharSequence("dug"), "dig");
        map.put(new SubCharSequence("lain"), "lie");
        map.put(new SubCharSequence("wedded"), "wed");
        map.put(new SubCharSequence("leapt"), "leap");
        map.put(new SubCharSequence("blessed"), "bless");
        map.put(new SubCharSequence("overdid"), "overdo");
        map.put(new SubCharSequence("awaked"), "awake");
        map.put(new SubCharSequence("lay"), "lie");
        map.put(new SubCharSequence("ate"), "eat");
        map.put(new SubCharSequence("felt"), "feel");
        map.put(new SubCharSequence("arose"), "arise");
        map.put(new SubCharSequence("sung"), "sing");
        map.put(new SubCharSequence("overheard"), "overhear");
        map.put(new SubCharSequence("overdrew"), "overdraw");
        map.put(new SubCharSequence("should"), "shall");
        map.put(new SubCharSequence("held"), "hold");
        map.put(new SubCharSequence("overgrew"), "overgrow");
        map.put(new SubCharSequence("bethought"), "bethink");
        map.put(new SubCharSequence("graved"), "grave");
        map.put(new SubCharSequence("unslung"), "unsling");
        map.put(new SubCharSequence("ungirded"), "ungird");
        map.put(new SubCharSequence("dared"), "dare");
        map.put(new SubCharSequence("strid"), "stride");
        map.put(new SubCharSequence("stunk"), "stink");
        map.put(new SubCharSequence("overeaten"), "overeat");
        map.put(new SubCharSequence("outate"), "outeat");
        map.put(new SubCharSequence("unswore"), "unswear");
        map.put(new SubCharSequence("weighed"), "weigh");
        map.put(new SubCharSequence("spun"), "spin");
        map.put(new SubCharSequence("gone"), "go");
        map.put(new SubCharSequence("grown"), "grow");
        map.put(new SubCharSequence("unlearned"), "unlearn");
        map.put(new SubCharSequence("was"), "is");
        map.put(new SubCharSequence("undid"), "undo");
        map.put(new SubCharSequence("outbade"), "outbid");
        map.put(new SubCharSequence("mowed"), "mow");
        map.put(new SubCharSequence("unstrung"), "unstring");
        map.put(new SubCharSequence("overgrown"), "overgrow");
        map.put(new SubCharSequence("thrown"), "throw");
        map.put(new SubCharSequence("ground"), "grind");
        map.put(new SubCharSequence("stuck"), "stick");
        map.put(new SubCharSequence("alit"), "alight");
        map.put(new SubCharSequence("smote"), "smite");
        map.put(new SubCharSequence("misgiven"), "misgive");
        map.put(new SubCharSequence("outworn"), "outwear");
        map.put(new SubCharSequence("underdid"), "underdo");
        map.put(new SubCharSequence("underwritten"), "underwrite");
        map.put(new SubCharSequence("bit"), "bite");
        map.put(new SubCharSequence("partaken"), "partake");
        map.put(new SubCharSequence("prechosen"), "prechoose");
        map.put(new SubCharSequence("relaid"), "relay");
        map.put(new SubCharSequence("stood"), "stand");
        map.put(new SubCharSequence("gilded"), "gild");
        map.put(new SubCharSequence("stove"), "stave");
        map.put(new SubCharSequence("slunk"), "slink");
        map.put(new SubCharSequence("stricken"), "strike");
        map.put(new SubCharSequence("stole"), "steal");
        map.put(new SubCharSequence("quitted"), "quit");
        map.put(new SubCharSequence("hid"), "hide");
        map.put(new SubCharSequence("forgotten"), "forget");
        map.put(new SubCharSequence("beaten"), "beat");
        map.put(new SubCharSequence("underwent"), "undergo");
        map.put(new SubCharSequence("wove"), "weave");
        map.put(new SubCharSequence("found"), "find");
        map.put(new SubCharSequence("seen"), "see");
        map.put(new SubCharSequence("smitten"), "smite");
        map.put(new SubCharSequence("overborne"), "overbear");
        map.put(new SubCharSequence("unstuck"), "unstick");
        map.put(new SubCharSequence("taught"), "teach");
        map.put(new SubCharSequence("drunk"), "drink");
        map.put(new SubCharSequence("forsworn"), "forswear");
        map.put(new SubCharSequence("underbidden"), "underbid");
        map.put(new SubCharSequence("dwelt"), "dwell");
        map.put(new SubCharSequence("shrived"), "shrive");
        map.put(new SubCharSequence("would/willed"), "will");
        map.put(new SubCharSequence("flew"), "fly");
        map.put(new SubCharSequence("misdealt"), "misdeal");
        map.put(new SubCharSequence("underpaid"), "underpay");
        map.put(new SubCharSequence("sang"), "sing");
        map.put(new SubCharSequence("overladen"), "overlade");
        map.put(new SubCharSequence("overblew"), "overblow");
        map.put(new SubCharSequence("overate"), "overeat");
        map.put(new SubCharSequence("overdrawn"), "overdraw");
        map.put(new SubCharSequence("forsaken"), "forsake");
        map.put(new SubCharSequence("learnt"), "learn");
        map.put(new SubCharSequence("clave"), "cleave");
        map.put(new SubCharSequence("repaid"), "repay");
        map.put(new SubCharSequence("wept"), "weep");
        map.put(new SubCharSequence("shaken"), "shake");
        map.put(new SubCharSequence("knew"), "know");
        map.put(new SubCharSequence("wrought"), "work");
        map.put(new SubCharSequence("swelled"), "swell");
        map.put(new SubCharSequence("prechose"), "prechoose");
        map.put(new SubCharSequence("overthrown"), "overthrow");
        map.put(new SubCharSequence("gilt"), "gild");
        map.put(new SubCharSequence("cleaved"), "cleave");
        map.put(new SubCharSequence("written"), "write");
        map.put(new SubCharSequence("spat"), "spit");
        map.put(new SubCharSequence("learned"), "learn");
        map.put(new SubCharSequence("woke"), "wake");
        map.put(new SubCharSequence("slain"), "slay");
        map.put(new SubCharSequence("fell"), "fall");
        map.put(new SubCharSequence("alighted"), "alight");
        map.put(new SubCharSequence("undertook"), "undertake");
        map.put(new SubCharSequence("sewn"), "sew");
        map.put(new SubCharSequence("gotten"), "get");
        map.put(new SubCharSequence("burned"), "burn");
        map.put(new SubCharSequence("unlearnt"), "unlearn");
        map.put(new SubCharSequence("foreknew"), "foreknow");
        map.put(new SubCharSequence("partook"), "partake");
        map.put(new SubCharSequence("bided"), "bide");
        map.put(new SubCharSequence("swung"), "swing");
        map.put(new SubCharSequence("overshot"), "overshoot");
        map.put(new SubCharSequence("overbuilt"), "overbuild");
        map.put(new SubCharSequence("grew"), "grow");
        map.put(new SubCharSequence("withstood"), "withstand");
        map.put(new SubCharSequence("striven"), "strive");
        map.put(new SubCharSequence("foreran"), "forerun");
        map.put(new SubCharSequence("built"), "build");
        map.put(new SubCharSequence("oversaw"), "oversee");
        map.put(new SubCharSequence("unsaid"), "unsay");
        map.put(new SubCharSequence("strung"), "string");
        map.put(new SubCharSequence("bled"), "bleed");
        map.put(new SubCharSequence("oversold"), "oversell");
        map.put(new SubCharSequence("overtaken"), "overtake");
        map.put(new SubCharSequence("rived"), "rive");
        map.put(new SubCharSequence("forswore"), "forswear");
        map.put(new SubCharSequence("lighted"), "light");
        map.put(new SubCharSequence("foregone"), "forego");
        map.put(new SubCharSequence("outsat"), "outsit");
        map.put(new SubCharSequence("spelled"), "spell");
        map.put(new SubCharSequence("wrote"), "write");
        map.put(new SubCharSequence("leaned"), "lean");
        map.put(new SubCharSequence("slidden"), "slide");
        map.put(new SubCharSequence("staved"), "stave");
        map.put(new SubCharSequence("broadcasted"), "broadcast");
        map.put(new SubCharSequence("browbeaten"), "browbeat");
        map.put(new SubCharSequence("shot"), "shoot");
        map.put(new SubCharSequence("sawn"), "saw");
        map.put(new SubCharSequence("unbound"), "unbind");
        map.put(new SubCharSequence("trod"), "tread");
        map.put(new SubCharSequence("unmade"), "unmake");
        map.put(new SubCharSequence("slept"), "sleep");
        map.put(new SubCharSequence("clad"), "clothe");
        map.put(new SubCharSequence("sold"), "sell");
        map.put(new SubCharSequence("kept"), "keep");
        map.put(new SubCharSequence("overflew"), "overfly");
        map.put(new SubCharSequence("unladen"), "unlade");
        map.put(new SubCharSequence("overladed"), "overlade");
        map.put(new SubCharSequence("hamstrung"), "hamstring");
        map.put(new SubCharSequence("thought"), "think");
        map.put(new SubCharSequence("chosen"), "choose");
        map.put(new SubCharSequence("worked"), "work");
        map.put(new SubCharSequence("swore"), "swear");
        map.put(new SubCharSequence("forewent"), "forego");
        map.put(new SubCharSequence("chid"), "chide");
        map.put(new SubCharSequence("swam"), "swim");
        map.put(new SubCharSequence("bestrewed"), "bestrew");
        map.put(new SubCharSequence("bestridden"), "bestride");
        map.put(new SubCharSequence("untrodden"), "untread");
        map.put(new SubCharSequence("tore"), "tear");
        map.put(new SubCharSequence("rung"), "ring");
        map.put(new SubCharSequence("bereaved"), "bereave");
        map.put(new SubCharSequence("cloven"), "cleave");
        map.put(new SubCharSequence("wist"), "wit");
        map.put(new SubCharSequence("slid"), "slide");
        map.put(new SubCharSequence("taken"), "take");
        map.put(new SubCharSequence("hewed"), "hew");
        map.put(new SubCharSequence("undershot"), "undershoot");
        map.put(new SubCharSequence("undergone"), "undergo");
        map.put(new SubCharSequence("outspent"), "outspend");
        map.put(new SubCharSequence("betook"), "betake");
        map.put(new SubCharSequence("awoke"), "awake");
        map.put(new SubCharSequence("strived"), "strive");
        map.put(new SubCharSequence("sent"), "send");
        map.put(new SubCharSequence("forgiven"), "forgive");
        map.put(new SubCharSequence("waked"), "wake");
        map.put(new SubCharSequence("unthought"), "unthink");
        map.put(new SubCharSequence("unknitted"), "unknit");
        map.put(new SubCharSequence("mistook"), "mistake");
        map.put(new SubCharSequence("gainsaid"), "gainsay");
        map.put(new SubCharSequence("rose"), "rise");
        map.put(new SubCharSequence("forbidden"), "forbid");
        map.put(new SubCharSequence("underwrote"), "underwrite");
        map.put(new SubCharSequence("hewn"), "hew");
        map.put(new SubCharSequence("winded"), "wind");
        map.put(new SubCharSequence("spoilt"), "spoil");
        map.put(new SubCharSequence("ridden"), "ride");
        map.put(new SubCharSequence("overdrove"), "overdrive");
        map.put(new SubCharSequence("unrove"), "unreeve");
        map.put(new SubCharSequence("done"), "do");
        map.put(new SubCharSequence("drawn"), "draw");
        map.put(new SubCharSequence("left"), "leave");
        map.put(new SubCharSequence("undrawn"), "undraw");
        map.put(new SubCharSequence("foretold"), "foretell");
        map.put(new SubCharSequence("bound"), "bind");
        map.put(new SubCharSequence("spilled"), "spill");
        map.put(new SubCharSequence("strewed"), "strew");
        map.put(new SubCharSequence("outeaten"), "outeat");
        map.put(new SubCharSequence("speeded"), "speed");
        map.put(new SubCharSequence("overtook"), "overtake");
        map.put(new SubCharSequence("proven"), "prove");
        map.put(new SubCharSequence("blown"), "blow");
        map.put(new SubCharSequence("shined"), "shine");
        map.put(new SubCharSequence("thrived"), "thrive");
        map.put(new SubCharSequence("wound"), "wind");
        map.put(new SubCharSequence("overrode"), "override");
        map.put(new SubCharSequence("did"), "do");
        map.put(new SubCharSequence("came"), "come");
        map.put(new SubCharSequence("hove"), "heave");
        map.put(new SubCharSequence("outfought"), "outfight");
        map.put(new SubCharSequence("stridden"), "stride");
        map.put(new SubCharSequence("slung"), "sling");
        map.put(new SubCharSequence("underlaid"), "underlay");
        map.put(new SubCharSequence("struck"), "strike");
        map.put(new SubCharSequence("sat"), "sit");
        map.put(new SubCharSequence("begot"), "beget");
        map.put(new SubCharSequence("eaten"), "eat");
        map.put(new SubCharSequence("overwound"), "overwind");
        map.put(new SubCharSequence("chided"), "chide");
        map.put(new SubCharSequence("forgave"), "forgive");
        map.put(new SubCharSequence("overlay"), "overlie");
        map.put(new SubCharSequence("bespoke"), "bespeak");
        map.put(new SubCharSequence("outthrew"), "outthrow");
        map.put(new SubCharSequence("could"), "can");
        map.put(new SubCharSequence("frozen"), "freeze");
        map.put(new SubCharSequence("besought"), "beseech");
        map.put(new SubCharSequence("fought"), "fight");
        map.put(new SubCharSequence("underlay"), "underlie");
        map.put(new SubCharSequence("misled"), "mislead");
        map.put(new SubCharSequence("wetted"), "wet");
        map.put(new SubCharSequence("undertaken"), "undertake");
        map.put(new SubCharSequence("bestrid"), "bestride");
        map.put(new SubCharSequence("withheld"), "withhold");
        map.put(new SubCharSequence("undersold"), "undersell");
        map.put(new SubCharSequence("meant"), "mean");
        map.put(new SubCharSequence("bestrewn"), "bestrew");
        map.put(new SubCharSequence("lost"), "lose");
        map.put(new SubCharSequence("forgot"), "forget");
        map.put(new SubCharSequence("paid"), "pay");
        map.put(new SubCharSequence("shriven"), "shrive");
        map.put(new SubCharSequence("blent"), "blend");
        map.put(new SubCharSequence("foreshowed"), "foreshow");
        map.put(new SubCharSequence("spoke"), "speak");
        map.put(new SubCharSequence("strove"), "strive");
        map.put(new SubCharSequence("drank"), "drink");
        map.put(new SubCharSequence("unspoke"), "unspeak");
        map.put(new SubCharSequence("outran"), "outrun");
        map.put(new SubCharSequence("sprang"), "spring");
        map.put(new SubCharSequence("oversewed"), "oversew");
        map.put(new SubCharSequence("overseen"), "oversee");
        map.put(new SubCharSequence("foresaw"), "foresee");
        map.put(new SubCharSequence("forbad"), "forbid");
        map.put(new SubCharSequence("upswept"), "upsweep");
        map.put(new SubCharSequence("broken"), "break");
        map.put(new SubCharSequence("fordone"), "fordo");
        map.put(new SubCharSequence("got"), "get");
        map.put(new SubCharSequence("overslept"), "oversleep");
        map.put(new SubCharSequence("won"), "win");
        map.put(new SubCharSequence("betted"), "bet");
        map.put(new SubCharSequence("sunken"), "sink");
        map.put(new SubCharSequence("forborne"), "forbear");
        map.put(new SubCharSequence("told"), "tell");
        map.put(new SubCharSequence("heard"), "hear");
        map.put(new SubCharSequence("overspent"), "overspend");
        map.put(new SubCharSequence("bidden"), "bid");
        map.put(new SubCharSequence("outthrown"), "outthrow");
        map.put(new SubCharSequence("had"), "have");
        map.put(new SubCharSequence("betaken"), "betake");
        map.put(new SubCharSequence("drew"), "draw");
        map.put(new SubCharSequence("beheld"), "behold");
        map.put(new SubCharSequence("became"), "become");
        map.put(new SubCharSequence("graven"), "grave");
        map.put(new SubCharSequence("riven"), "rive");
        map.put(new SubCharSequence("might"), "may");
        map.put(new SubCharSequence("met"), "meet");
        map.put(new SubCharSequence("showed"), "show");
        map.put(new SubCharSequence("dwelled"), "dwell");
        map.put(new SubCharSequence("shrank"), "shrink");
        map.put(new SubCharSequence("untaught"), "unteach");
        map.put(new SubCharSequence("upheld"), "uphold");
        map.put(new SubCharSequence("flown"), "fly");
        map.put(new SubCharSequence("bereft"), "bereave");
        map.put(new SubCharSequence("clung"), "cling");
        map.put(new SubCharSequence("leant"), "lean");
        map.put(new SubCharSequence("outgrew"), "outgrow");
        map.put(new SubCharSequence("underlain"), "underlie");
        map.put(new SubCharSequence("wrung"), "wring");
        map.put(new SubCharSequence("sank"), "sink");
        map.put(new SubCharSequence("forbade"), "forbid");
        map.put(new SubCharSequence("bespoken"), "bespeak");
        map.put(new SubCharSequence("overridden"), "override");
        map.put(new SubCharSequence("spent"), "spend");
        map.put(new SubCharSequence("unladed"), "unlade");
        map.put(new SubCharSequence("flung"), "fling");
        map.put(new SubCharSequence("sworn"), "swear");
        map.put(new SubCharSequence("sweated"), "sweat");
        map.put(new SubCharSequence("befell"), "befall");
        map.put(new SubCharSequence("thriven"), "thrive");
        map.put(new SubCharSequence("fed"), "feed");
        map.put(new SubCharSequence("broke"), "break");
        map.put(new SubCharSequence("underfed"), "underfeed");
        map.put(new SubCharSequence("unspoken"), "unspeak");
        map.put(new SubCharSequence("unfroze"), "unfreeze");
        map.put(new SubCharSequence("sewed"), "sew");
        map.put(new SubCharSequence("overleaped"), "overleap");
        map.put(new SubCharSequence("risen"), "rise");
        map.put(new SubCharSequence("rebuilt"), "rebuild");
        map.put(new SubCharSequence("bred"), "breed");
        map.put(new SubCharSequence("slew"), "slay");
        map.put(new SubCharSequence("laded"), "lade");
        map.put(new SubCharSequence("overleapt"), "overleap");
        map.put(new SubCharSequence("dreamt"), "dream");
        map.put(new SubCharSequence("drove"), "drive");
        map.put(new SubCharSequence("crept"), "creep");
        map.put(new SubCharSequence("worn"), "wear");
        map.put(new SubCharSequence("laden"), "lade");
        map.put(new SubCharSequence("overdriven"), "overdrive");
        map.put(new SubCharSequence("shorn"), "shear");
        map.put(new SubCharSequence("outgrown"), "outgrow");
        map.put(new SubCharSequence("underbought"), "underbuy");
        map.put(new SubCharSequence("unbent"), "unbend");
        map.put(new SubCharSequence("overhung"), "overhang");
        map.put(new SubCharSequence("bought"), "buy");
        map.put(new SubCharSequence("lied"), "lie");
        map.put(new SubCharSequence("fled"), "fly");
        map.put(new SubCharSequence("stung"), "sting");
        map.put(new SubCharSequence("shod"), "shoe");
        map.put(new SubCharSequence("bent"), "bend");
        map.put(new SubCharSequence("outshone"), "outshine");
        map.put(new SubCharSequence("hung"), "hang");
        map.put(new SubCharSequence("underdone"), "underdo");
        map.put(new SubCharSequence("outwent"), "outgo");
        map.put(new SubCharSequence("swum"), "swim");
        map.put(new SubCharSequence("spelt"), "spell");
        map.put(new SubCharSequence("born"), "bear");
        map.put(new SubCharSequence("swollen"), "swell");
        map.put(new SubCharSequence("shrunk"), "shrink");
        map.put(new SubCharSequence("been"), "be");
        map.put(new SubCharSequence("crowed"), "crow");
        map.put(new SubCharSequence("durst"), "dare");
        map.put(new SubCharSequence("shrunken"), "shrink");
        map.put(new SubCharSequence("stolen"), "steal");
        map.put(new SubCharSequence("bestrode"), "bestride");
        map.put(new SubCharSequence("undone"), "undo");
        map.put(new SubCharSequence("understood"), "understand");
        map.put(new SubCharSequence("reeved"), "reeve");
        map.put(new SubCharSequence("proved"), "prove");
        map.put(new SubCharSequence("were"), "be");
        map.put(new SubCharSequence("spilt"), "spill");
        map.put(new SubCharSequence("unreeved"), "unreeve");
        map.put(new SubCharSequence("undrew"), "undraw");
        map.put(new SubCharSequence("dreamed"), "dream");
        map.put(new SubCharSequence("girt"), "gird");
        map.put(new SubCharSequence("awoken"), "awake");
        map.put(new SubCharSequence("flied"), "fly");
        map.put(new SubCharSequence("said"), "say");
        map.put(new SubCharSequence("knitted"), "knit");
        map.put(new SubCharSequence("unwoven"), "unweave");
        map.put(new SubCharSequence("led"), "lead");
        map.put(new SubCharSequence("unfrozen"), "unfreeze");
        map.put(new SubCharSequence("outshot"), "outshoot");
        map.put(new SubCharSequence("gave"), "give");
        map.put(new SubCharSequence("given"), "give");
        map.put(new SubCharSequence("uprisen"), "uprise");
        map.put(new SubCharSequence("arisen"), "arise");
        map.put(new SubCharSequence("forsook"), "forsake");
        map.put(new SubCharSequence("froze"), "freeze");
        map.put(new SubCharSequence("caught"), "catch");
        map.put(new SubCharSequence("foreseen"), "foresee");
        map.put(new SubCharSequence("overran"), "overrun");
        map.put(new SubCharSequence("abode"), "abide");
        map.put(new SubCharSequence("unlaid"), "unlay");
        map.put(new SubCharSequence("swept"), "sweep");
        map.put(new SubCharSequence("ran"), "run");
        map.put(new SubCharSequence("blew"), "blow");
        map.put(new SubCharSequence("burnt"), "burn");
        map.put(new SubCharSequence("ungirt"), "ungird");
        map.put(new SubCharSequence("begun"), "begin");
        map.put(new SubCharSequence("smelled"), "smell");
        map.put(new SubCharSequence("shook"), "shake");
        map.put(new SubCharSequence("upswung"), "upswing");
        map.put(new SubCharSequence("blended"), "blend");
        map.put(new SubCharSequence("unsworn"), "unswear");
        map.put(new SubCharSequence("threw"), "throw");
        map.put(new SubCharSequence("hamstringed"), "hamstring");
        map.put(new SubCharSequence("overcame"), "overcome");
        map.put(new SubCharSequence("died"), "die");
        map.put(new SubCharSequence("rode"), "ride");
        map.put(new SubCharSequence("sown"), "sow");
        map.put(new SubCharSequence("outlaid"), "outlay");
        map.put(new SubCharSequence("inlaid"), "inlay");
        map.put(new SubCharSequence("torn"), "tear");
        map.put(new SubCharSequence("overdone"), "overdo");
        map.put(new SubCharSequence("strewn"), "strew");
        map.put(new SubCharSequence("untrod"), "untread");
        map.put(new SubCharSequence("outwore"), "outwear");
        map.put(new SubCharSequence("beseeched"), "beseech");
        map.put(new SubCharSequence("unwound"), "unwind");
        map.put(new SubCharSequence("upbuilt"), "upbuild");
        map.put(new SubCharSequence("bitten"), "bite");
        map.put(new SubCharSequence("hanged"), "hang");
        map.put(new SubCharSequence("lit"), "light");
        map.put(new SubCharSequence("heaved"), "heave");
        map.put(new SubCharSequence("woven"), "weave");
        map.put(new SubCharSequence("overfed"), "overfeed");
        map.put(new SubCharSequence("mown"), "mow");
        map.put(new SubCharSequence("foreshown"), "foreshow");
        map.put(new SubCharSequence("clothed"), "clothe");
        map.put(new SubCharSequence("outdone"), "outdo");
        map.put(new SubCharSequence("outbred"), "outbreed");
        map.put(new SubCharSequence("outsold"), "outsell");
        map.put(new SubCharSequence("overbore"), "overbear");
        map.put(new SubCharSequence("outrode"), "outride");
        map.put(new SubCharSequence("overwritten"), "overwrite");
        map.put(new SubCharSequence("begotten"), "beget");
        map.put(new SubCharSequence("borne"), "bear");
        map.put(new SubCharSequence("driven"), "drive");
        map.put(new SubCharSequence("shaven"), "shave");
        map.put(new SubCharSequence("shrove"), "shrive");
        map.put(new SubCharSequence("unhung"), "unhang");
        map.put(new SubCharSequence("melten"), "melt");
        map.put(new SubCharSequence("known"), "know");
        map.put(new SubCharSequence("rove"), "reeve");
        map.put(new SubCharSequence("overlain"), "overlie");
        map.put(new SubCharSequence("overthrew"), "overthrow");
        map.put(new SubCharSequence("outbidden"), "outbid");
        map.put(new SubCharSequence("took"), "take");
        map.put(new SubCharSequence("sought"), "seek");
        map.put(new SubCharSequence("foreknown"), "foreknow");
        map.put(new SubCharSequence("spoiled"), "spoil");
        map.put(new SubCharSequence("bore"), "bear");
        map.put(new SubCharSequence("crew"), "crow");
        map.put(new SubCharSequence("made"), "make");
        map.put(new SubCharSequence("brought"), "bring");
        map.put(new SubCharSequence("oversewn"), "oversew");
        map.put(new SubCharSequence("misunderstood"), "misunderstand");
        map.put(new SubCharSequence("began"), "begin");
        map.put(new SubCharSequence("strode"), "stride");
        map.put(new SubCharSequence("misgave"), "misgive");
        map.put(new SubCharSequence("shredded"), "shred");
        map.put(new SubCharSequence("sowed"), "sow");
        map.put(new SubCharSequence("befallen"), "befall");
        map.put(new SubCharSequence("overlaid"), "overlay");
        map.put(new SubCharSequence("uprose"), "uprise");
        map.put(new SubCharSequence("reaved"), "reave");
        map.put(new SubCharSequence("melted"), "melt");
        map.put(new SubCharSequence("fallen"), "fall");
        map.put(new SubCharSequence("overwrote"), "overwrite");
        map.put(new SubCharSequence("chidden"), "chide");
        map.put(new SubCharSequence("shaved"), "shave");
        map.put(new SubCharSequence("sped"), "speed");
        map.put(new SubCharSequence("overbidden"), "overbid");
        map.put(new SubCharSequence("spoken"), "speak");
        map.put(new SubCharSequence("ridded"), "rid");
        map.put(new SubCharSequence("shown"), "show");
        map.put(new SubCharSequence("wore"), "wear");
        map.put(new SubCharSequence("sheared"), "shear");
        map.put(new SubCharSequence("cleft"), "cleave");
        map.put(new SubCharSequence("shone"), "shine");
        map.put(new SubCharSequence("outridden"), "outride");
        map.put(new SubCharSequence("kneeled"), "kneel");
        map.put(new SubCharSequence("withdrew"), "withdraw");
        map.put(new SubCharSequence("stank"), "stink");
        map.put(new SubCharSequence("dealt"), "deal");
        map.put(new SubCharSequence("chose"), "choose");
        map.put(new SubCharSequence("reft"), "reave");
        map.put(new SubCharSequence("sprung"), "spring");
        mapping = map;
    }

    public static CharSequence get(CharSequence word) {
        if (mapping == null) {
            buildMap();
        }
        return mapping.get(word);
    }
}
